#ifndef INI_READER_H
#define INI_READER_H

#ifndef INIPARSER_H_INCLUDED
#define INIPARSER_H_INCLUDED
/* Generated by Carburetta from iniparser.cbrt. 
 * Extra care must be taken that this generated file is on the include path of the compiler.
 * A forward declaration for struct ini_reader is needed for the prototype of scan() and parse() */
struct ini_reader;
#include "iniparser.h" 
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Return values to indicate what is happening. These return values share the same "space" as
 * the Carburetta generated _INIPARSER_FINISH, _INIPARSER_MATCH and so on, return codes. Those
 * generates codes start from 0 onwards, these codes are negative, ensuring they won't conflict. */
#define INI_READER_SECTION -1
#define INI_READER_KEY_VALUE -2
#define INI_READER_IO_ERROR -3

struct ini_reader {
  struct iniparser_stack stack_;

  /* Section string
   * Valid when INI_READER_SECTION if returned. */
  char *section_;

  /* Key string; valid when INI_READER_KEY_VALUE is returned. */
  const char *key_;

  /* Value string; this is the string from the '=' symbol up to the end of the line,
   * but not including the newline. */
  const char *value_;
};

void ini_reader_init(struct ini_reader *ir);
void ini_reader_cleanup(struct ini_reader *ir);
int ini_reader_read(struct ini_reader *ir, FILE *fp);

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* INI_READ_H */
