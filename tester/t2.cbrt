/* Copyright 2020-2025 Kinglet B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <stdio.h>
#include <stdlib.h>

%scanner%
%prefix t2_

: [\ \n]+; /* skip spaces and newlines */
PAR_OPEN: \(; 
PAR_CLOSE: \);

%token PAR_OPEN PAR_CLOSE
%nt term

%grammar%

term: PAR_OPEN term PAR_CLOSE;
term: ;
 
%%

int t2(void) {
  int rv = -1;
  int r;
  struct t2_stack stack;
  t2_stack_init(&stack);
  const char paired[] = "((()))";
  t2_set_input(&stack, paired, sizeof(paired)-1, 1);
  r = t2_scan(&stack);

  if (r != _T2_FINISH) goto fail;

  const char mismatched[] = "())";
  t2_set_input(&stack, mismatched, sizeof(mismatched) - 1, 1);
  r = t2_scan(&stack);

  if (r != _T2_SYNTAX_ERROR) goto fail;

  rv = 0;
fail:
  t2_stack_cleanup(&stack);
  return rv;
}
