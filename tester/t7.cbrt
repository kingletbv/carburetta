/* Copyright 2020-2025 Kinglet B.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

/* little helper function defined below, to read UTF-8 as a codepoint value.. */
int get_next_utf8_codepoint(const char **pputf8);

/* little helper function to encode a UTF-8 codepoint as a string. */
int codepoint_as_utf8(char *dst, uint32_t codepoint);

struct interval { int from_, to_; };

static const struct interval Ll[] = {
  { 0x0061, 0x007a }, { 0x00b5, 0x00b5 }, { 0x00df, 0x00f6 }, { 0x00f8, 0x00ff }, { 0x0101, 0x0101 }, { 0x0103, 0x0103 }, { 0x0105, 0x0105 }, { 0x0107, 0x0107 }, { 0x0109, 0x0109 }, { 0x010b, 0x010b }, { 0x010d, 0x010d }, { 0x010f, 0x010f }, { 0x0111, 0x0111 }, { 0x0113, 0x0113 }, { 0x0115, 0x0115 }, { 0x0117, 0x0117 }, { 0x0119, 0x0119 }, { 0x011b, 0x011b }, { 0x011d, 0x011d }, { 0x011f, 0x011f }, { 0x0121, 0x0121 }, { 0x0123, 0x0123 }, { 0x0125, 0x0125 }, { 0x0127, 0x0127 }, { 0x0129, 0x0129 }, { 0x012b, 0x012b }, { 0x012d, 0x012d }, { 0x012f, 0x012f }, { 0x0131, 0x0131 }, { 0x0133, 0x0133 }, { 0x0135, 0x0135 }, { 0x0137, 0x0138 }, { 0x013a, 0x013a }, { 0x013c, 0x013c }, { 0x013e, 0x013e }, { 0x0140, 0x0140 }, { 0x0142, 0x0142 }, { 0x0144, 0x0144 }, { 0x0146, 0x0146 }, { 0x0148, 0x0149 }, { 0x014b, 0x014b }, { 0x014d, 0x014d }, { 0x014f, 0x014f }, { 0x0151, 0x0151 }, { 0x0153, 0x0153 }, { 0x0155, 0x0155 }, { 0x0157, 0x0157 }, { 0x0159, 0x0159 }, { 0x015b, 0x015b }, { 0x015d, 0x015d }, { 0x015f, 0x015f }, { 0x0161, 0x0161 }, { 0x0163, 0x0163 }, { 0x0165, 0x0165 }, { 0x0167, 0x0167 }, { 0x0169, 0x0169 }, { 0x016b, 0x016b }, { 0x016d, 0x016d }, { 0x016f, 0x016f }, { 0x0171, 0x0171 }, { 0x0173, 0x0173 }, { 0x0175, 0x0175 }, { 0x0177, 0x0177 }, { 0x017a, 0x017a }, { 0x017c, 0x017c }, { 0x017e, 0x0180 }, { 0x0183, 0x0183 }, { 0x0185, 0x0185 }, { 0x0188, 0x0188 }, { 0x018c, 0x018d }, { 0x0192, 0x0192 }, { 0x0195, 0x0195 }, { 0x0199, 0x019b }, { 0x019e, 0x019e }, { 0x01a1, 0x01a1 }, { 0x01a3, 0x01a3 }, { 0x01a5, 0x01a5 }, { 0x01a8, 0x01a8 }, { 0x01aa, 0x01ab }, { 0x01ad, 0x01ad }, { 0x01b0, 0x01b0 }, { 0x01b4, 0x01b4 }, { 0x01b6, 0x01b6 }, { 0x01b9, 0x01ba }, { 0x01bd, 0x01bf }, { 0x01c6, 0x01c6 }, { 0x01c9, 0x01c9 }, { 0x01cc, 0x01cc }, { 0x01ce, 0x01ce }, { 0x01d0, 0x01d0 }, { 0x01d2, 0x01d2 }, { 0x01d4, 0x01d4 }, { 0x01d6, 0x01d6 }, { 0x01d8, 0x01d8 }, { 0x01da, 0x01da }, { 0x01dc, 0x01dd }, { 0x01df, 0x01df }, { 0x01e1, 0x01e1 }, { 0x01e3, 0x01e3 }, { 0x01e5, 0x01e5 }, { 0x01e7, 0x01e7 }, { 0x01e9, 0x01e9 }, { 0x01eb, 0x01eb }, { 0x01ed, 0x01ed }, { 0x01ef, 0x01f0 }, { 0x01f3, 0x01f3 }, { 0x01f5, 0x01f5 }, { 0x01f9, 0x01f9 }, { 0x01fb, 0x01fb }, { 0x01fd, 0x01fd }, { 0x01ff, 0x01ff }, { 0x0201, 0x0201 }, { 0x0203, 0x0203 }, { 0x0205, 0x0205 }, { 0x0207, 0x0207 }, { 0x0209, 0x0209 }, { 0x020b, 0x020b }, { 0x020d, 0x020d }, { 0x020f, 0x020f }, { 0x0211, 0x0211 }, { 0x0213, 0x0213 }, { 0x0215, 0x0215 }, { 0x0217, 0x0217 }, { 0x0219, 0x0219 }, { 0x021b, 0x021b }, { 0x021d, 0x021d }, { 0x021f, 0x021f }, { 0x0221, 0x0221 }, { 0x0223, 0x0223 }, { 0x0225, 0x0225 }, { 0x0227, 0x0227 }, { 0x0229, 0x0229 }, { 0x022b, 0x022b }, { 0x022d, 0x022d }, { 0x022f, 0x022f }, { 0x0231, 0x0231 }, { 0x0233, 0x0239 }, { 0x023c, 0x023c }, { 0x023f, 0x0240 }, { 0x0242, 0x0242 }, { 0x0247, 0x0247 }, { 0x0249, 0x0249 }, { 0x024b, 0x024b }, { 0x024d, 0x024d }, { 0x024f, 0x0293 }, { 0x0295, 0x02af }, { 0x0371, 0x0371 }, { 0x0373, 0x0373 }, { 0x0377, 0x0377 }, { 0x037b, 0x037d }, { 0x0390, 0x0390 }, { 0x03ac, 0x03ce }, { 0x03d0, 0x03d1 }, { 0x03d5, 0x03d7 }, { 0x03d9, 0x03d9 }, { 0x03db, 0x03db }, { 0x03dd, 0x03dd }, { 0x03df, 0x03df }, { 0x03e1, 0x03e1 }, { 0x03e3, 0x03e3 }, { 0x03e5, 0x03e5 }, { 0x03e7, 0x03e7 }, { 0x03e9, 0x03e9 }, { 0x03eb, 0x03eb }, { 0x03ed, 0x03ed }, { 0x03ef, 0x03f3 }, { 0x03f5, 0x03f5 }, { 0x03f8, 0x03f8 }, { 0x03fb, 0x03fc }, { 0x0430, 0x045f }, { 0x0461, 0x0461 }, { 0x0463, 0x0463 }, { 0x0465, 0x0465 }, { 0x0467, 0x0467 }, { 0x0469, 0x0469 }, { 0x046b, 0x046b }, { 0x046d, 0x046d }, { 0x046f, 0x046f }, { 0x0471, 0x0471 }, { 0x0473, 0x0473 }, { 0x0475, 0x0475 }, { 0x0477, 0x0477 }, { 0x0479, 0x0479 }, { 0x047b, 0x047b }, { 0x047d, 0x047d }, { 0x047f, 0x047f }, { 0x0481, 0x0481 }, { 0x048b, 0x048b }, { 0x048d, 0x048d }, { 0x048f, 0x048f }, { 0x0491, 0x0491 }, { 0x0493, 0x0493 }, { 0x0495, 0x0495 }, { 0x0497, 0x0497 }, { 0x0499, 0x0499 }, { 0x049b, 0x049b }, { 0x049d, 0x049d }, { 0x049f, 0x049f }, { 0x04a1, 0x04a1 }, { 0x04a3, 0x04a3 }, { 0x04a5, 0x04a5 }, { 0x04a7, 0x04a7 }, { 0x04a9, 0x04a9 }, { 0x04ab, 0x04ab }, { 0x04ad, 0x04ad }, { 0x04af, 0x04af }, { 0x04b1, 0x04b1 }, { 0x04b3, 0x04b3 }, { 0x04b5, 0x04b5 }, { 0x04b7, 0x04b7 }, { 0x04b9, 0x04b9 }, { 0x04bb, 0x04bb }, { 0x04bd, 0x04bd }, { 0x04bf, 0x04bf }, { 0x04c2, 0x04c2 }, { 0x04c4, 0x04c4 }, { 0x04c6, 0x04c6 }, { 0x04c8, 0x04c8 }, { 0x04ca, 0x04ca }, { 0x04cc, 0x04cc }, { 0x04ce, 0x04cf }, { 0x04d1, 0x04d1 }, { 0x04d3, 0x04d3 }, { 0x04d5, 0x04d5 }, { 0x04d7, 0x04d7 }, { 0x04d9, 0x04d9 }, { 0x04db, 0x04db }, { 0x04dd, 0x04dd }, { 0x04df, 0x04df }, { 0x04e1, 0x04e1 }, { 0x04e3, 0x04e3 }, { 0x04e5, 0x04e5 }, { 0x04e7, 0x04e7 }, { 0x04e9, 0x04e9 }, { 0x04eb, 0x04eb }, { 0x04ed, 0x04ed }, { 0x04ef, 0x04ef }, { 0x04f1, 0x04f1 }, { 0x04f3, 0x04f3 }, { 0x04f5, 0x04f5 }, { 0x04f7, 0x04f7 }, { 0x04f9, 0x04f9 }, { 0x04fb, 0x04fb }, { 0x04fd, 0x04fd }, { 0x04ff, 0x04ff }, { 0x0501, 0x0501 }, { 0x0503, 0x0503 }, { 0x0505, 0x0505 }, { 0x0507, 0x0507 }, { 0x0509, 0x0509 }, { 0x050b, 0x050b }, { 0x050d, 0x050d }, { 0x050f, 0x050f }, { 0x0511, 0x0511 }, { 0x0513, 0x0513 }, { 0x0515, 0x0515 }, { 0x0517, 0x0517 }, { 0x0519, 0x0519 }, { 0x051b, 0x051b }, { 0x051d, 0x051d }, { 0x051f, 0x051f }, { 0x0521, 0x0521 }, { 0x0523, 0x0523 }, { 0x0525, 0x0525 }, { 0x0527, 0x0527 }, { 0x0529, 0x0529 }, { 0x052b, 0x052b }, { 0x052d, 0x052d }, { 0x052f, 0x052f }, { 0x0560, 0x0588 }, { 0x10d0, 0x10fa }, { 0x10fd, 0x10ff }, { 0x13f8, 0x13fd }, { 0x1c80, 0x1c88 }, { 0x1d00, 0x1d2b }, { 0x1d6b, 0x1d77 }, { 0x1d79, 0x1d9a }, { 0x1e01, 0x1e01 }, { 0x1e03, 0x1e03 }, { 0x1e05, 0x1e05 }, { 0x1e07, 0x1e07 }, { 0x1e09, 0x1e09 }, { 0x1e0b, 0x1e0b }, { 0x1e0d, 0x1e0d }, { 0x1e0f, 0x1e0f }, { 0x1e11, 0x1e11 }, { 0x1e13, 0x1e13 }, { 0x1e15, 0x1e15 }, { 0x1e17, 0x1e17 }, { 0x1e19, 0x1e19 }, { 0x1e1b, 0x1e1b }, { 0x1e1d, 0x1e1d }, { 0x1e1f, 0x1e1f }, { 0x1e21, 0x1e21 }, { 0x1e23, 0x1e23 }, { 0x1e25, 0x1e25 }, { 0x1e27, 0x1e27 }, { 0x1e29, 0x1e29 }, { 0x1e2b, 0x1e2b }, { 0x1e2d, 0x1e2d }, { 0x1e2f, 0x1e2f }, { 0x1e31, 0x1e31 }, { 0x1e33, 0x1e33 }, { 0x1e35, 0x1e35 }, { 0x1e37, 0x1e37 }, { 0x1e39, 0x1e39 }, { 0x1e3b, 0x1e3b }, { 0x1e3d, 0x1e3d }, { 0x1e3f, 0x1e3f }, { 0x1e41, 0x1e41 }, { 0x1e43, 0x1e43 }, { 0x1e45, 0x1e45 }, { 0x1e47, 0x1e47 }, { 0x1e49, 0x1e49 }, { 0x1e4b, 0x1e4b }, { 0x1e4d, 0x1e4d }, { 0x1e4f, 0x1e4f }, { 0x1e51, 0x1e51 }, { 0x1e53, 0x1e53 }, { 0x1e55, 0x1e55 }, { 0x1e57, 0x1e57 }, { 0x1e59, 0x1e59 }, { 0x1e5b, 0x1e5b }, { 0x1e5d, 0x1e5d }, { 0x1e5f, 0x1e5f }, { 0x1e61, 0x1e61 }, { 0x1e63, 0x1e63 }, { 0x1e65, 0x1e65 }, { 0x1e67, 0x1e67 }, { 0x1e69, 0x1e69 }, { 0x1e6b, 0x1e6b }, { 0x1e6d, 0x1e6d }, { 0x1e6f, 0x1e6f }, { 0x1e71, 0x1e71 }, { 0x1e73, 0x1e73 }, { 0x1e75, 0x1e75 }, { 0x1e77, 0x1e77 }, { 0x1e79, 0x1e79 }, { 0x1e7b, 0x1e7b }, { 0x1e7d, 0x1e7d }, { 0x1e7f, 0x1e7f }, { 0x1e81, 0x1e81 }, { 0x1e83, 0x1e83 }, { 0x1e85, 0x1e85 }, { 0x1e87, 0x1e87 }, { 0x1e89, 0x1e89 }, { 0x1e8b, 0x1e8b }, { 0x1e8d, 0x1e8d }, { 0x1e8f, 0x1e8f }, { 0x1e91, 0x1e91 }, { 0x1e93, 0x1e93 }, { 0x1e95, 0x1e9d }, { 0x1e9f, 0x1e9f }, { 0x1ea1, 0x1ea1 }, { 0x1ea3, 0x1ea3 }, { 0x1ea5, 0x1ea5 }, { 0x1ea7, 0x1ea7 }, { 0x1ea9, 0x1ea9 }, { 0x1eab, 0x1eab }, { 0x1ead, 0x1ead }, { 0x1eaf, 0x1eaf }, { 0x1eb1, 0x1eb1 }, { 0x1eb3, 0x1eb3 }, { 0x1eb5, 0x1eb5 }, { 0x1eb7, 0x1eb7 }, { 0x1eb9, 0x1eb9 }, { 0x1ebb, 0x1ebb }, { 0x1ebd, 0x1ebd }, { 0x1ebf, 0x1ebf }, { 0x1ec1, 0x1ec1 }, { 0x1ec3, 0x1ec3 }, { 0x1ec5, 0x1ec5 }, { 0x1ec7, 0x1ec7 }, { 0x1ec9, 0x1ec9 }, { 0x1ecb, 0x1ecb }, { 0x1ecd, 0x1ecd }, { 0x1ecf, 0x1ecf }, { 0x1ed1, 0x1ed1 }, { 0x1ed3, 0x1ed3 }, { 0x1ed5, 0x1ed5 }, { 0x1ed7, 0x1ed7 }, { 0x1ed9, 0x1ed9 }, { 0x1edb, 0x1edb }, { 0x1edd, 0x1edd }, { 0x1edf, 0x1edf }, { 0x1ee1, 0x1ee1 }, { 0x1ee3, 0x1ee3 }, { 0x1ee5, 0x1ee5 }, { 0x1ee7, 0x1ee7 }, { 0x1ee9, 0x1ee9 }, { 0x1eeb, 0x1eeb }, { 0x1eed, 0x1eed }, { 0x1eef, 0x1eef }, { 0x1ef1, 0x1ef1 }, { 0x1ef3, 0x1ef3 }, { 0x1ef5, 0x1ef5 }, { 0x1ef7, 0x1ef7 }, { 0x1ef9, 0x1ef9 }, { 0x1efb, 0x1efb }, { 0x1efd, 0x1efd }, { 0x1eff, 0x1f07 }, { 0x1f10, 0x1f15 }, { 0x1f20, 0x1f27 }, { 0x1f30, 0x1f37 }, { 0x1f40, 0x1f45 }, { 0x1f50, 0x1f57 }, { 0x1f60, 0x1f67 }, { 0x1f70, 0x1f7d }, { 0x1f80, 0x1f87 }, { 0x1f90, 0x1f97 }, { 0x1fa0, 0x1fa7 }, { 0x1fb0, 0x1fb4 }, { 0x1fb6, 0x1fb7 }, { 0x1fbe, 0x1fbe }, { 0x1fc2, 0x1fc4 }, { 0x1fc6, 0x1fc7 }, { 0x1fd0, 0x1fd3 }, { 0x1fd6, 0x1fd7 }, { 0x1fe0, 0x1fe7 }, { 0x1ff2, 0x1ff4 }, { 0x1ff6, 0x1ff7 }, { 0x210a, 0x210a }, { 0x210e, 0x210f }, { 0x2113, 0x2113 }, { 0x212f, 0x212f }, { 0x2134, 0x2134 }, { 0x2139, 0x2139 }, { 0x213c, 0x213d }, { 0x2146, 0x2149 }, { 0x214e, 0x214e }, { 0x2184, 0x2184 }, { 0x2c30, 0x2c5f }, { 0x2c61, 0x2c61 }, { 0x2c65, 0x2c66 }, { 0x2c68, 0x2c68 }, { 0x2c6a, 0x2c6a }, { 0x2c6c, 0x2c6c }, { 0x2c71, 0x2c71 }, { 0x2c73, 0x2c74 }, { 0x2c76, 0x2c7b }, { 0x2c81, 0x2c81 }, { 0x2c83, 0x2c83 }, { 0x2c85, 0x2c85 }, { 0x2c87, 0x2c87 }, { 0x2c89, 0x2c89 }, { 0x2c8b, 0x2c8b }, { 0x2c8d, 0x2c8d }, { 0x2c8f, 0x2c8f }, { 0x2c91, 0x2c91 }, { 0x2c93, 0x2c93 }, { 0x2c95, 0x2c95 }, { 0x2c97, 0x2c97 }, { 0x2c99, 0x2c99 }, { 0x2c9b, 0x2c9b }, { 0x2c9d, 0x2c9d }, { 0x2c9f, 0x2c9f }, { 0x2ca1, 0x2ca1 }, { 0x2ca3, 0x2ca3 }, { 0x2ca5, 0x2ca5 }, { 0x2ca7, 0x2ca7 }, { 0x2ca9, 0x2ca9 }, { 0x2cab, 0x2cab }, { 0x2cad, 0x2cad }, { 0x2caf, 0x2caf }, { 0x2cb1, 0x2cb1 }, { 0x2cb3, 0x2cb3 }, { 0x2cb5, 0x2cb5 }, { 0x2cb7, 0x2cb7 }, { 0x2cb9, 0x2cb9 }, { 0x2cbb, 0x2cbb }, { 0x2cbd, 0x2cbd }, { 0x2cbf, 0x2cbf }, { 0x2cc1, 0x2cc1 }, { 0x2cc3, 0x2cc3 }, { 0x2cc5, 0x2cc5 }, { 0x2cc7, 0x2cc7 }, { 0x2cc9, 0x2cc9 }, { 0x2ccb, 0x2ccb }, { 0x2ccd, 0x2ccd }, { 0x2ccf, 0x2ccf }, { 0x2cd1, 0x2cd1 }, { 0x2cd3, 0x2cd3 }, { 0x2cd5, 0x2cd5 }, { 0x2cd7, 0x2cd7 }, { 0x2cd9, 0x2cd9 }, { 0x2cdb, 0x2cdb }, { 0x2cdd, 0x2cdd }, { 0x2cdf, 0x2cdf }, { 0x2ce1, 0x2ce1 }, { 0x2ce3, 0x2ce4 }, { 0x2cec, 0x2cec }, { 0x2cee, 0x2cee }, { 0x2cf3, 0x2cf3 }, { 0x2d00, 0x2d25 }, { 0x2d27, 0x2d27 }, { 0x2d2d, 0x2d2d }, { 0xa641, 0xa641 }, { 0xa643, 0xa643 }, { 0xa645, 0xa645 }, { 0xa647, 0xa647 }, { 0xa649, 0xa649 }, { 0xa64b, 0xa64b }, { 0xa64d, 0xa64d }, { 0xa64f, 0xa64f }, { 0xa651, 0xa651 }, { 0xa653, 0xa653 }, { 0xa655, 0xa655 }, { 0xa657, 0xa657 }, { 0xa659, 0xa659 }, { 0xa65b, 0xa65b }, { 0xa65d, 0xa65d }, { 0xa65f, 0xa65f }, { 0xa661, 0xa661 }, { 0xa663, 0xa663 }, { 0xa665, 0xa665 }, { 0xa667, 0xa667 }, { 0xa669, 0xa669 }, { 0xa66b, 0xa66b }, { 0xa66d, 0xa66d }, { 0xa681, 0xa681 }, { 0xa683, 0xa683 }, { 0xa685, 0xa685 }, { 0xa687, 0xa687 }, { 0xa689, 0xa689 }, { 0xa68b, 0xa68b }, { 0xa68d, 0xa68d }, { 0xa68f, 0xa68f }, { 0xa691, 0xa691 }, { 0xa693, 0xa693 }, { 0xa695, 0xa695 }, { 0xa697, 0xa697 }, { 0xa699, 0xa699 }, { 0xa69b, 0xa69b }, { 0xa723, 0xa723 }, { 0xa725, 0xa725 }, { 0xa727, 0xa727 }, { 0xa729, 0xa729 }, { 0xa72b, 0xa72b }, { 0xa72d, 0xa72d }, { 0xa72f, 0xa731 }, { 0xa733, 0xa733 }, { 0xa735, 0xa735 }, { 0xa737, 0xa737 }, { 0xa739, 0xa739 }, { 0xa73b, 0xa73b }, { 0xa73d, 0xa73d }, { 0xa73f, 0xa73f }, { 0xa741, 0xa741 }, { 0xa743, 0xa743 }, { 0xa745, 0xa745 }, { 0xa747, 0xa747 }, { 0xa749, 0xa749 }, { 0xa74b, 0xa74b }, { 0xa74d, 0xa74d }, { 0xa74f, 0xa74f }, { 0xa751, 0xa751 }, { 0xa753, 0xa753 }, { 0xa755, 0xa755 }, { 0xa757, 0xa757 }, { 0xa759, 0xa759 }, { 0xa75b, 0xa75b }, { 0xa75d, 0xa75d }, { 0xa75f, 0xa75f }, { 0xa761, 0xa761 }, { 0xa763, 0xa763 }, { 0xa765, 0xa765 }, { 0xa767, 0xa767 }, { 0xa769, 0xa769 }, { 0xa76b, 0xa76b }, { 0xa76d, 0xa76d }, { 0xa76f, 0xa76f }, { 0xa771, 0xa778 }, { 0xa77a, 0xa77a }, { 0xa77c, 0xa77c }, { 0xa77f, 0xa77f }, { 0xa781, 0xa781 }, { 0xa783, 0xa783 }, { 0xa785, 0xa785 }, { 0xa787, 0xa787 }, { 0xa78c, 0xa78c }, { 0xa78e, 0xa78e }, { 0xa791, 0xa791 }, { 0xa793, 0xa795 }, { 0xa797, 0xa797 }, { 0xa799, 0xa799 }, { 0xa79b, 0xa79b }, { 0xa79d, 0xa79d }, { 0xa79f, 0xa79f }, { 0xa7a1, 0xa7a1 }, { 0xa7a3, 0xa7a3 }, { 0xa7a5, 0xa7a5 }, { 0xa7a7, 0xa7a7 }, { 0xa7a9, 0xa7a9 }, { 0xa7af, 0xa7af }, { 0xa7b5, 0xa7b5 }, { 0xa7b7, 0xa7b7 }, { 0xa7b9, 0xa7b9 }, { 0xa7bb, 0xa7bb }, { 0xa7bd, 0xa7bd }, { 0xa7bf, 0xa7bf }, { 0xa7c1, 0xa7c1 }, { 0xa7c3, 0xa7c3 }, { 0xa7c8, 0xa7c8 }, { 0xa7ca, 0xa7ca }, { 0xa7d1, 0xa7d1 }, { 0xa7d3, 0xa7d3 }, { 0xa7d5, 0xa7d5 }, { 0xa7d7, 0xa7d7 }, { 0xa7d9, 0xa7d9 }, { 0xa7f6, 0xa7f6 }, { 0xa7fa, 0xa7fa }, { 0xab30, 0xab5a }, { 0xab60, 0xab68 }, { 0xab70, 0xabbf }, { 0xfb00, 0xfb06 }, { 0xfb13, 0xfb17 }, { 0xff41, 0xff5a }, { 0x10428, 0x1044f }, { 0x104d8, 0x104fb }, { 0x10597, 0x105a1 }, { 0x105a3, 0x105b1 }, { 0x105b3, 0x105b9 }, { 0x105bb, 0x105bc }, { 0x10cc0, 0x10cf2 }, { 0x118c0, 0x118df }, { 0x16e60, 0x16e7f }, { 0x1d41a, 0x1d433 }, { 0x1d44e, 0x1d454 }, { 0x1d456, 0x1d467 }, { 0x1d482, 0x1d49b }, { 0x1d4b6, 0x1d4b9 }, { 0x1d4bb, 0x1d4bb }, { 0x1d4bd, 0x1d4c3 }, { 0x1d4c5, 0x1d4cf }, { 0x1d4ea, 0x1d503 }, { 0x1d51e, 0x1d537 }, { 0x1d552, 0x1d56b }, { 0x1d586, 0x1d59f }, { 0x1d5ba, 0x1d5d3 }, { 0x1d5ee, 0x1d607 }, { 0x1d622, 0x1d63b }, { 0x1d656, 0x1d66f }, { 0x1d68a, 0x1d6a5 }, { 0x1d6c2, 0x1d6da }, { 0x1d6dc, 0x1d6e1 }, { 0x1d6fc, 0x1d714 }, { 0x1d716, 0x1d71b }, { 0x1d736, 0x1d74e }, { 0x1d750, 0x1d755 }, { 0x1d770, 0x1d788 }, { 0x1d78a, 0x1d78f }, { 0x1d7aa, 0x1d7c2 }, { 0x1d7c4, 0x1d7c9 }, { 0x1d7cb, 0x1d7cb }, { 0x1df00, 0x1df09 }, { 0x1df0b, 0x1df1e }, { 0x1df25, 0x1df2a }, { 0x1e922, 0x1e943 } };

%scanner%
%prefix t7_

%%
static int num_not_lowercase_letter_ = 0;
static int num_remaining_ = 0;

%%

: \P{Ll} {
  /* Matches anything *but* Ll / Lowercase_Letter */
  num_not_lowercase_letter_++;
}

: .|\n {
  /* Matches anything remaining (so everything, minus anything that's not Ll, should be Ll). */
  num_remaining_++;
}

%%

int t7(void) {
  int rv = -1;
  int r;

  int num_ll = 0;
  size_t n;
  for (n = 0; n < sizeof(Ll)/sizeof(*Ll); ++n) {
    const struct interval *iv = Ll + n;
    num_ll += iv->to_ - iv->from_ + 1;
  }

  struct t7_stack stack;
  t7_stack_init(&stack);
  
  char cp_utf8[4];

  uint32_t cp;
  /* Run through the entire set and check that the counts match up. */
  for (cp = 0x0; cp <= 0x10FFFF; ++cp) {
    t7_set_input(&stack, cp_utf8, codepoint_as_utf8(cp_utf8, cp), 1);
    r = t7_scan(&stack);
    if (r != _T7_FINISH) {
      rv = -1;
      goto fail;
    }
  }

  /* num_not_lowercase_letter_ + num_remaining = 0x10FFFF+1 */
  if ((num_not_lowercase_letter_ + num_remaining_) != (0x10FFFF+1)) {
    rv = -2;
    goto fail;
  }

  /* num_remaining_ = num_ll */
  if (num_remaining_ != num_ll) {
    rv = -3;
    goto fail;
  }

  rv = 0;
fail:
  t7_stack_cleanup(&stack);
  return rv;
}

